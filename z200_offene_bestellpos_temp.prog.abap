
************************************************************************
* 2010-08-02   smartShift project
* Regel IDs angewandt: #102 #105 #143 #166
************************************************************************

REPORT AQCSSYSTQV000010ZDGU_7000=====
   LINE-SIZE 253 NO STANDARD PAGE HEADING LINE-COUNT 000(001).

INCLUDE <SYMBOL>.
INCLUDE <ICON>.
SELECTION-SCREEN: BEGIN OF BLOCK PROG
                           WITH FRAME TITLE TEXT-F58.

TABLES MARC.
TABLES EKET.
TABLES EKPO.
DATA %COUNT_EKPO(4) TYPE X.                      "smart: 2010-08-02 #102
DATA %LINR_EKPO(2).                              "smart: 2010-08-02 #102

DATA: BEGIN OF %JOINWA,
        EKPO LIKE EKPO,
        EKET LIKE EKET,
        MARC LIKE MARC,
      END OF %JOINWA.
TABLES AQLDB.

INCLUDE RSAQEXCD.

DATA: BEGIN OF %ST_LISTE OCCURS 100,
          HEAD(1),
          TAB(3),
          LINE(6) TYPE N,
          CONT(1) TYPE N,
          FINT(1),
          FINV(1),
          FCOL(1) TYPE N,
          TEXT(0253),
      END OF %ST_LISTE.

DATA %DATA_SELECTED(1).
DATA %GLFRAME(1)  VALUE 'X' .
DATA %UFLAG(1).
DATA %USTFLAG(1).
DATA %GRST_TEXT(255).
DATA %GLLINE TYPE I.
DATA %TABIX LIKE SY-TABIX.
DATA %PRFLAG(1) TYPE X VALUE '02'.


DATA %PERC(4) TYPE P DECIMALS 3.
DATA %P100(4) TYPE P DECIMALS 3 VALUE '100.000'.
DATA %RANGCT TYPE I.
DATA %RANGCC(8).
DATA %SUBRC LIKE SY-SUBRC.

DATA: BEGIN OF %WA010 OCCURS 10,
            EKET_WEMNG(16) TYPE P DECIMALS 03,   "smart: 2010-08-02 #102
            EKET_MENGE(16) TYPE P DECIMALS 03,   "smart: 2010-08-02 #102
            BEGIN OF EKET,
                  EKPO_MEINS LIKE EKPO-MEINS,    "smart: 2010-08-02 #102
            END OF EKET,
      END OF %WA010.

DATA: BEGIN OF %W0100 OCCURS 20,
            EKPO_MEINS LIKE EKPO-MEINS,          "smart: 2010-08-02 #102
            EKET_WEMNG(16) TYPE P DECIMALS 03,   "smart: 2010-08-02 #102
            EKET_MENGE(16) TYPE P DECIMALS 03,   "smart: 2010-08-02 #102
      END OF %W0100.
SELECT-OPTIONS SP$00001 FOR EKPO-MATNR MEMORY ID MAT.
SELECT-OPTIONS SP$00002 FOR EKPO-WERKS MEMORY ID WRK.
SELECT-OPTIONS SP$00003 FOR EKPO-LGORT MEMORY ID LAG.
SELECT-OPTIONS SP$00004 FOR EKPO-LOEKZ.
SELECT-OPTIONS SP$00005 FOR EKPO-ELIKZ.
SELECT-OPTIONS SP$00006 FOR EKET-MENGE.
SELECT-OPTIONS SP$00007 FOR EKET-WEMNG.
SELECT-OPTIONS SP$00008 FOR MARC-INSMK.
SELECTION-SCREEN SKIP 1.
SELECTION-SCREEN: BEGIN OF BLOCK DIRECT
                  WITH FRAME TITLE TEXT-F59.
SELECTION-SCREEN: BEGIN OF LINE.
PARAMETERS:       %ALV RADIOBUTTON GROUP FUNC USER-COMMAND OUTBUT
                         DEFAULT 'X' .
SELECTION-SCREEN: COMMENT 4(26) TEXT-F72 FOR FIELD %ALV.
PARAMETERS:       %ALVL TYPE SLIS_VARI.
SELECTION-SCREEN: PUSHBUTTON 72(4) PB%EXCO USER-COMMAND EXPCOL.
SELECTION-SCREEN: END OF LINE.
SELECTION-SCREEN: BEGIN OF LINE.
PARAMETERS:       %NOFUNC RADIOBUTTON GROUP FUNC MODIF ID OLD.
SELECTION-SCREEN: COMMENT 4(26) TEXT-F66 FOR FIELD %NOFUNC
                                         MODIF ID OLD.
PARAMETERS:       %TVIEW RADIOBUTTON GROUP FUNC MODIF ID OLD.
SELECTION-SCREEN: COMMENT 34(26) TEXT-F68 FOR FIELD %TVIEW
                                          MODIF ID OLD,
                  END OF LINE.
SELECTION-SCREEN: BEGIN OF LINE.
PARAMETERS:       %GRAPH RADIOBUTTON GROUP FUNC MODIF ID OLD.
SELECTION-SCREEN: COMMENT 4(26) TEXT-F61 FOR FIELD %GRAPH
                                         MODIF ID OLD.
PARAMETERS:       %TEXT RADIOBUTTON GROUP FUNC MODIF ID OLD.
SELECTION-SCREEN: COMMENT 34(26) TEXT-F69 FOR FIELD %TEXT
                                          MODIF ID OLD,
                  END OF LINE.
SELECTION-SCREEN: BEGIN OF LINE.
PARAMETERS:       %ABC RADIOBUTTON GROUP FUNC MODIF ID OLD.
SELECTION-SCREEN: COMMENT 4(26) TEXT-F70 FOR FIELD %ABC
                                         MODIF ID OLD.
PARAMETERS:       %EXCEL RADIOBUTTON GROUP FUNC MODIF ID OLD.
SELECTION-SCREEN: COMMENT 34(26) TEXT-F60 FOR FIELD %EXCEL
                                         MODIF ID OLD,
                  END OF LINE.
SELECTION-SCREEN: BEGIN OF LINE.
PARAMETERS:       %EIS RADIOBUTTON GROUP FUNC MODIF ID OLD.
SELECTION-SCREEN: COMMENT 4(26) TEXT-F63 FOR FIELD %EIS
                                         MODIF ID OLD.
SELECTION-SCREEN: END OF LINE.
SELECTION-SCREEN: BEGIN OF LINE.
PARAMETERS:       %XINT RADIOBUTTON GROUP FUNC MODIF ID XIN.
SELECTION-SCREEN: COMMENT 4(26) TEXT-F73 FOR FIELD %XINT
                                         MODIF ID XIN.
PARAMETERS:       %XINTK(30) LOWER CASE MODIF ID XIN.
SELECTION-SCREEN: END OF LINE.
SELECTION-SCREEN: BEGIN OF LINE.
PARAMETERS:       %DOWN RADIOBUTTON GROUP FUNC MODIF ID OLD.
SELECTION-SCREEN: COMMENT 4(26) TEXT-F64 FOR FIELD %DOWN
                                         MODIF ID OLD.
PARAMETERS:       %PATH(132) LOWER CASE MODIF ID OLD.
SELECTION-SCREEN: END OF LINE.
SELECTION-SCREEN: BEGIN OF LINE.
PARAMETERS:       %SAVE RADIOBUTTON GROUP FUNC MODIF ID OLD.
SELECTION-SCREEN: COMMENT 4(26) TEXT-F62 FOR FIELD %SAVE
                                         MODIF ID OLD.
PARAMETERS:       %LISTID(40) LOWER CASE MODIF ID OLD.
SELECTION-SCREEN: END OF LINE.
SELECTION-SCREEN: END OF BLOCK DIRECT.
SELECTION-SCREEN: END OF BLOCK PROG.

DATA: BEGIN OF %G00 OCCURS 100,
            EKPO_MATNR LIKE EKPO-MATNR,          "smart: 2010-08-02 #102
            EKPO_EBELN LIKE EKPO-EBELN,          "smart: 2010-08-02 #102
            EKPO_EBELP LIKE EKPO-EBELP,          "smart: 2010-08-02 #102
            EKET_MENGE LIKE EKET-MENGE,          "smart: 2010-08-02 #102
            EKPO_MEINS_0104 LIKE EKPO-MEINS,     "smart: 2010-08-02 #102
            EKET_WEMNG LIKE EKET-WEMNG,          "smart: 2010-08-02 #102
            EKPO_MEINS_0105 LIKE EKPO-MEINS,     "smart: 2010-08-02 #102
      END OF %G00.
DATA: BEGIN OF %%G00,
            EKPO_MATNR(018),                     "smart: 2010-08-02 #102
            EKPO_EBELN(010),                     "smart: 2010-08-02 #102
            EKPO_EBELP(005),                     "smart: 2010-08-02 #102
            EKET_MENGE(017),                     "smart: 2010-08-02 #102
            EKPO_MEINS_0104 LIKE EKPO-MEINS,     "smart: 2010-08-02 #102
            EKET_WEMNG(017),                     "smart: 2010-08-02 #102
            EKPO_MEINS_0105 LIKE EKPO-MEINS,     "smart: 2010-08-02 #102
      END OF %%G00.
DATA %ZNR TYPE I.
DATA %LZNR TYPE I VALUE 99999.
FIELD-GROUPS HEADER.
FIELD-GROUPS %FG01.
DATA %ANY_01.                                    "smart: 2010-08-02 #102
DATA %EXT_EKET01.                                "smart: 2010-08-02 #102
FIELD-GROUPS %FGWREKET01.

CONTROLS TVIEW100 TYPE TABLEVIEW USING SCREEN 100.

AT SELECTION-SCREEN .
PERFORM ALVL_CHECK(RSAQEXCE) USING %ALVL 'G00'.
PERFORM TESTMODE(RSAQEXCE).
PERFORM CHECK_EXPCOL(RSAQEXCE) USING %ALV.


AT SELECTION-SCREEN ON VALUE-REQUEST FOR %ALVL .
PERFORM ALVL_VALUE_REQUEST(RSAQEXCE) USING %ALVL 'G00'.

AT SELECTION-SCREEN ON VALUE-REQUEST FOR %XINTK .
PERFORM XINT_VALUE_REQUEST(RSAQEXCE).

AT SELECTION-SCREEN OUTPUT .

PERFORM RINIT(RSAQBRST).
PERFORM SET_EXPCOL(RSAQEXCE) USING %ALV PB%EXCO.
PERFORM ALVL_SET_INVISIBLE(RSAQEXCE).
PERFORM SET_XINT_PARAMS(RSAQEXCE).



INITIALIZATION.

* Test Programmberechtigung
  perform test_berechtigung.



PERFORM INIT_XINT(RSAQEXCE).
PERFORM SET_WWW_FLAGS(RSAQEXCE).
PERFORM INIT_PRINT_PARAMS(RSAQEXCE).

START-OF-SELECTION.
INSERT EKPO-MEINS INTO %FGWREKET01.
INSERT EKET-MENGE INTO %FGWREKET01.
INSERT EKET-WEMNG INTO %FGWREKET01.
INSERT %COUNT_EKPO INTO HEADER.                  "smart: 2010-08-02 #102
INSERT %LINR_EKPO INTO HEADER.                   "smart: 2010-08-02 #102
INSERT EKPO-MATNR INTO %FG01.
INSERT EKPO-EBELN INTO %FG01.
INSERT EKPO-EBELP INTO %FG01.
INSERT EKET-MENGE INTO %FG01.
INSERT EKPO-MEINS INTO %FG01.
INSERT EKET-WEMNG INTO %FG01.
INSERT EKPO-MEINS INTO %FG01.
PERFORM INIT_TEXTHANDLING(RSAQEXCE) USING 'CL_TEXT_IDENTIFIER' ' '
        'SYSTQV000000000000000009'.
PERFORM AUTHORITY_BEGIN(RSAQEXCE).
PERFORM AUTHORITY(RSAQEXCE) USING 'EKPO'.
PERFORM AUTHORITY(RSAQEXCE) USING 'EKET'.
PERFORM AUTHORITY(RSAQEXCE) USING 'MARC'.
PERFORM AUTHORITY_END(RSAQEXCE).
PERFORM %COMP_LDESC.
SELECT EKPO~EBELN EKPO~EBELP EKPO~ELIKZ EKPO~LGORT EKPO~LOEKZ
       EKPO~MATNR EKPO~MEINS EKPO~WERKS EKET~EBELN EKET~EBELP
       EKET~MENGE EKET~WEMNG MARC~INSMK MARC~MATNR
INTO (EKPO-EBELN , EKPO-EBELP , EKPO-ELIKZ , EKPO-LGORT , EKPO-LOEKZ
     , EKPO-MATNR , EKPO-MEINS , EKPO-WERKS , EKET-EBELN , EKET-EBELP
     , EKET-MENGE , EKET-WEMNG , MARC-INSMK , MARC-MATNR )
FROM ( EKPO
       INNER JOIN EKET
       ON EKET~EBELN = EKPO~EBELN
       AND EKET~EBELP = EKPO~EBELP
       INNER JOIN MARC
       ON MARC~MATNR = EKPO~MATNR )
       WHERE EKPO~ELIKZ IN SP$00005
         AND EKPO~LGORT IN SP$00003
         AND EKPO~LOEKZ IN SP$00004
         AND EKPO~MATNR IN SP$00001
         AND EKPO~WERKS IN SP$00002
         AND EKET~MENGE IN SP$00006
         AND EKET~WEMNG IN SP$00007
         AND MARC~INSMK IN SP$00008.
  %DBACC = %DBACC - 1.
  IF %DBACC = 0.
    STOP.
  ENDIF.
  CHECK SP$00006.
  CHECK SP$00007.
  CHECK SP$00005.
  CHECK SP$00003.
  CHECK SP$00004.
  CHECK SP$00001.
  CHECK SP$00002.
  CHECK SP$00008.
  ADD 1 TO %COUNT_EKPO.                          "smart: 2010-08-02 #102
  %LINR_EKPO = '01'.                             "smart: 2010-08-02 #102
  EXTRACT %FG01.
  %EXT_EKET01 = 'X'.                             "smart: 2010-08-02 #102
    EXTRACT %FGWREKET01.
ENDSELECT.

END-OF-SELECTION.
SORT AS TEXT.
%DIACT = SPACE.
%BATCH = SY-BATCH.
IF %BATCH <> SPACE.
  IF %EIS <> SPACE.
    %DIACT = 'E'.
    IF %EISPROTOCOL = SPACE.
      NEW-PAGE PRINT ON DESTINATION 'NULL' NO DIALOG
               LINE-SIZE 0253 LINE-COUNT 0065.
    ELSE.
      NEW-PAGE PRINT ON NO DIALOG
               PARAMETERS %INIT_PRI_PARAMS.
    ENDIF.
  ENDIF.
  IF %ALV <> SPACE.
    %DIACT = 'V'.
    %ALV_LAYOUT = %ALVL.
    NEW-PAGE PRINT ON DESTINATION 'NULL' NO DIALOG
             LINE-SIZE 0253 LINE-COUNT 0065.
  ENDIF.
  IF %SAVE <> SPACE.
    %DIACT = 'S'.
    NEW-PAGE PRINT ON DESTINATION 'NULL' NO DIALOG
             LINE-SIZE 0253 LINE-COUNT 0065.
  ENDIF.
ELSEIF %CALLED_BY_WWW <> SPACE.
  %DIACT = SPACE.
ELSEIF %CALLED_BY_WWW_ALV <> SPACE.
  %DIACT = 'V'.
ELSE.
  PERFORM INIT_PRINT_PARAMS(RSAQEXCE).
  IF %SAVE  <> SPACE. %DIACT = 'S'. ENDIF.
  IF %XINT  <> SPACE. %DIACT = 'I'. ENDIF.
  IF %TVIEW <> SPACE. %DIACT = 'T'. ENDIF.
  IF %ALV   <> SPACE. %DIACT = 'V'. ENDIF.
  IF %DOWN  <> SPACE. %DIACT = 'D'. ENDIF.
  IF %EIS   <> SPACE. %DIACT = 'E'. ENDIF.
  IF %GRAPH <> SPACE. %DIACT = 'G'. ENDIF.
  IF %EXCEL <> SPACE. %DIACT = 'X'. ENDIF.
  IF %TEXT  <> SPACE. %DIACT = 'W'. ENDIF.
  IF %ABC   <> SPACE. %DIACT = 'A'. ENDIF.
  IF %DIACT <> SPACE AND %DIACT <> 'S' AND %DIACT <> 'W'.
    NEW-PAGE PRINT ON DESTINATION 'NULL' NO DIALOG
             LINE-SIZE 0253 LINE-COUNT 0065.
  ENDIF.
  %PATHNAME = %PATH.
  IF %DIACT = 'I'.
    %FUNCTIONKEY = %XINTK.
  ENDIF.
  IF %DIACT = 'V'.
    %ALV_LAYOUT = %ALVL.
  ENDIF.
ENDIF.
FREE MEMORY ID 'AQLISTDATA'.
IF %MEMMODE <> SPACE.
  IF %BATCH <> SPACE.
    NEW-PAGE PRINT ON DESTINATION 'NULL' NO DIALOG
             LINE-SIZE 0253 LINE-COUNT 0065.
  ENDIF.
  %DIACT = '1'.
ENDIF.
%TITEL = ' '.
IF SY-SUBTY O %PRFLAG AND %TITEL = SPACE.
  NEW-PAGE WITH-TITLE.
ENDIF.
%TVSIZE = 0200.
%PLINE = 1.
%PZGR  = 1.
%FIRST = 'X'.
PERFORM %OUTPUT.
%FIRST = SPACE.
IF %DIACT <> SPACE AND %DIACT <> 'S'.
  IF %BATCH = SPACE.
    NEW-PAGE PRINT OFF.
    IF NOT ( %DIACT = 'V' AND %UCOMM = 'PRIN' ).
      NEW-PAGE NO-HEADING NO-TITLE.
      WRITE SPACE.
    ENDIF.
  ENDIF.
ELSE.
  PERFORM PF-STATUS(RSAQEXCE) USING 'XXX X '.
ENDIF.
CLEAR: %TAB, %LINE, %CONT.
IF %DATA_SELECTED = SPACE.
  IF %DIACT = '1'.
    EXPORT EMPTY FROM %EMPTY TO MEMORY ID 'AQLISTDATA'.
    LEAVE.
  ELSE.
    IF %BATCH = SPACE AND
       %CALLED_BY_WWW = SPACE AND
       %CALLED_BY_WWW_ALV = SPACE.
      MESSAGE S260(AQ).
      LEAVE LIST-PROCESSING.
    ELSE.
      IF %CALLED_BY_WWW_ALV = SPACE.
        %DIACT = SPACE.
      ENDIF.
    ENDIF.
  ENDIF.
ENDIF.
IF %DIACT = 'S'.
  PERFORM %SAVE_LIST.
  LEAVE LIST-PROCESSING.
ENDIF.
IF %DIACT = 'V' AND %BATCH <> SPACE.
  NEW-PAGE PRINT OFF.
  PERFORM SET_PRINT_PARAMS(RSAQEXCE).
  PERFORM %DOWNLOAD USING 'ALV'.
  LEAVE.
ENDIF.
IF %DIACT = 'V' AND %CALLED_BY_WWW_ALV <> SPACE.
  PERFORM %DOWNLOAD USING 'ALV'.
  LEAVE.
ENDIF.
IF %DIACT = 'V' AND %UCOMM = 'PRIN'.
  NEW-PAGE PRINT OFF.
  PERFORM SET_PRINT_PARAMS(RSAQEXCE).
  PERFORM %DOWNLOAD USING 'ALV'.
  LEAVE LIST-PROCESSING.
ENDIF.
IF %DIACT = 'P' AND %BATCH <> SPACE.
  PERFORM %DOWNLOAD USING '+DAT'.
  LEAVE LIST-PROCESSING.
ENDIF.
IF %DIACT = 'E' AND %BATCH <> SPACE.
  PERFORM %DOWNLOAD USING 'EIS'.
  LEAVE LIST-PROCESSING.
ENDIF.
IF %DIACT = '1'.
  PERFORM %DOWNLOAD USING '+MEM'.
  LEAVE.
ENDIF.
IF %DIACT = 'X'.
  SET USER-COMMAND 'XXL'.
ELSEIF %DIACT = 'W'.
  SET USER-COMMAND 'TEXT'.
ELSEIF %DIACT = 'V'.
  SET USER-COMMAND 'ALV'.
ELSEIF %DIACT = 'T'.
  SET USER-COMMAND 'VIEW'.
ELSEIF %DIACT = 'G'.
  SET USER-COMMAND 'GRAF'.
ELSEIF %DIACT = 'A'.
  SET USER-COMMAND 'ABCA'.
ELSEIF %DIACT = 'E'.
  SET USER-COMMAND 'EIS'.
ELSEIF %DIACT = 'D'.
  SET USER-COMMAND 'DOWN'.
ELSEIF %DIACT = 'I'.
  SET USER-COMMAND 'XINT'.
ELSEIF %DIACT = 'P'.
  SET USER-COMMAND '+DAT'.
ENDIF.

TOP-OF-PAGE.
PERFORM %TOP_OF_PAGE.                            "smart: 2010-08-02 #143

END-OF-PAGE.
PERFORM PAGE_FOOT(RSAQEXCE).
PERFORM %SAVE_PAGE.

TOP-OF-PAGE DURING LINE-SELECTION.
PERFORM %TOP_OF_PAGE.                            "smart: 2010-08-02 #143

AT USER-COMMAND.
CASE SY-UCOMM.
WHEN 'EXIT'.
  LEAVE PROGRAM.
WHEN 'RETN'.
  PERFORM RETURN(RSAQEXCE).
WHEN 'CANC'.
  PERFORM RETURN(RSAQEXCE).
WHEN 'WEIT'.
  PERFORM RETURN(RSAQEXCE).
WHEN 'INHA'.
  PERFORM CATALOGUE(RSAQEXCE).
WHEN 'AUSL'.
  PERFORM PICKUP(RSAQEXCE).
WHEN 'AUSW'.
  PERFORM PICKUP(RSAQEXCE).
WHEN 'RCAA'.
  PERFORM RCHAIN(RSAQBRST).
WHEN 'RCAL'.
  PERFORM RCALL(RSAQBRST).
WHEN 'VGLI'.
  PERFORM CHANGE(RSAQEXCE).
WHEN 'VGLE'.
  PERFORM CHANGE(RSAQEXCE).
WHEN 'TOTO'.
  PERFORM CHANGE(RSAQEXCE).
WHEN 'VSTA'.
  PERFORM CHANGE(RSAQEXCE).
WHEN 'VSTE'.
  PERFORM RETURN(RSAQEXCE).
WHEN 'SAVL'.
  PERFORM %SAVE_LIST.
WHEN 'ODRU'.
  PERFORM PRINT_LIST(RSAQEXCE).
WHEN 'COPA'.
  PERFORM PRINT_COVER_PAGE(RSAQEXCE).
WHEN 'TEXT'.
  PERFORM %DOWNLOAD USING 'TEXT'.
WHEN 'ALV'.
  PERFORM %DOWNLOAD USING 'ALV'.
WHEN 'VIEW'.
  PERFORM %VIEW.
WHEN 'XXL'.
  PERFORM %DOWNLOAD USING 'XXL'.
WHEN 'GRAF'.
  PERFORM %DOWNLOAD USING 'GRAF'.
WHEN 'ABCA'.
  PERFORM %DOWNLOAD USING 'ABCA'.
WHEN 'EIS'.
  PERFORM %DOWNLOAD USING 'EIS'.
WHEN 'DOWN'.
  PERFORM %DOWNLOAD USING 'DOWN'.
WHEN 'XINT'.
  PERFORM %DOWNLOAD USING 'XINT'.
ENDCASE.
CLEAR: %CLINE, %ZGR.
CLEAR: %TAB, %LINE, %CONT.
IF %DIACT <> SPACE.
  LEAVE LIST-PROCESSING.
ENDIF.



* Test Programmberechtigung
  include zincl_progber.



FORM %COMP_LDESC.

  REFRESH %LDESC.
  REFRESH %GDESC.
  PERFORM LDESC(RSAQEXCE) USING 'G00010000X018       00  98'
    TEXT-A00 TEXT-B00 TEXT-H00 'EKPO-MATNR' EKPO-MATNR 'EKPO-MATNR'.
  PERFORM LDESC(RSAQEXCE) USING 'G00020000X010       00  98'
    TEXT-A01 TEXT-B01 TEXT-H00 'EKPO-EBELN' EKPO-EBELN 'EKPO-EBELN'.
  PERFORM LDESC(RSAQEXCE) USING 'G00030000X005       00  98'
    TEXT-A02 TEXT-B02 TEXT-H00 'EKPO-EBELP' EKPO-EBELP 'EKPO-EBELP'.
  PERFORM LDESC(RSAQEXCE) USING 'G00040038 017M    X 00  98'
    TEXT-A03 TEXT-B03 TEXT-H00 'EKET-MENGE' EKET-MENGE 'EKET-MENGE'.
  PERFORM LDESC(RSAQEXCE) USING 'G00050000 003E      00  98'
    TEXT-A04 TEXT-B04 TEXT-H00 'EKPO-MEINS' EKPO-MEINS
    'EKPO-MEINS-0104'.
  PERFORM LDESC(RSAQEXCE) USING 'G00060060 017M    X 00  98'
    TEXT-A05 TEXT-B05 TEXT-H00 'EKET-WEMNG' EKET-WEMNG 'EKET-WEMNG'.
  PERFORM LDESC(RSAQEXCE) USING 'G00070000 003E      00  98'
    TEXT-A06 TEXT-B06 TEXT-H00 'EKPO-MEINS' EKPO-MEINS
    'EKPO-MEINS-0105'.
  PERFORM GDESC(RSAQEXCE) USING 'G00' 5 20 ' ' ' ' 'X'.
  PERFORM COMPLETE_LDESC(RSAQEXCE) TABLES %LDESC.

ENDFORM.

FORM %OUTPUT.

DESCRIBE TABLE %PRLIST LINES %MAX_PRLIST.
%HEAD = 'AAA'.
%KEYEMPTY = SPACE.
NEW-PAGE.
PERFORM %OUTPUT_GL.
PERFORM COMPLETE_PAGE(RSAQEXCE).
%HEAD = 'ZZZ'.
PERFORM LAST_PTAB_ENTRY(RSAQEXCE).
NEW-PAGE.
IF %KEYEMPTY <> SPACE.
  MESSAGE S894(AQ).
ENDIF.

ENDFORM.


FORM %TOP_OF_PAGE.                               "smart: 2010-08-02 #143

IF SY-UCOMM = 'INHA'. EXIT. ENDIF.
IF SY-UCOMM = 'COPA'. EXIT. ENDIF.
IF %HEAD    = SPACE.  EXIT. ENDIF.
IF %HEAD = 'DDD'.
  PERFORM TVIEWPAGE(RSAQEXCE).
  EXIT.
ENDIF.
IF %HEAD = 'GGG'.
  PERFORM PAGE(RSAQEXCE) USING 'G00' TEXT-GRL 252 %GLFRAME 001.
  SET LEFT SCROLL-BOUNDARY COLUMN 002.
  PERFORM SET_SCROLL_BOUNDARY(RSAQEXCE) USING 002.
  IF %TOTO <> SPACE. EXIT. ENDIF.
ELSE.
  CASE %HEAD.
  ENDCASE.
ENDIF.

ENDFORM.


FORM %NEWLINE.

  %UFLAG = SPACE.
  NEW-LINE.
  WRITE: '|', 252 '|'.
  POSITION 2.

ENDFORM.

FORM %SKIP USING COUNT.

  IF SY-LINNO > 1.
    %UFLAG = SPACE.
    DO COUNT TIMES.
      NEW-LINE.
      FORMAT RESET.
      WRITE: '|', 252 '|'.
    ENDDO.
  ENDIF.

ENDFORM.

FORM %ULINE.

  IF %UFLAG = SPACE.
    IF SY-LINNO > 1.
      ULINE /1(252).
    ENDIF.
    %UFLAG = 'X'.
  ENDIF.

ENDFORM.

FORM %HIDE.

  IF %BATCH <> SPACE AND %DIACT = 'S'.
    PERFORM HIDE(RSAQEXCE).
  ELSE.
    HIDE: %TAB, %LINE, %CONT.
  ENDIF.

ENDFORM.

FORM %HIDE_COLOR.

  IF %BATCH <> SPACE AND %DIACT = 'S'.
    PERFORM HIDE_COLOR(RSAQEXCE).
  ELSE.
    HIDE: %FINT, %FCOL.
  ENDIF.

ENDFORM.

FORM %RCALL USING NAME VALUE.

FIELD-SYMBOLS <FIELD>.

  ASSIGN (NAME) TO <FIELD>.
  READ CURRENT LINE FIELD VALUE <FIELD> INTO VALUE.
  IF SY-SUBRC <> 0.
    VALUE = SPACE.
    EXIT.
  ENDIF.
  IF VALUE = SPACE AND %TAB = 'G00' AND %LDESC-FCUR NA 'FM'.
    READ TABLE %G00 INDEX %LINE.
    IF SY-SUBRC = 0.
      ASSIGN COMPONENT %LDESC-FNAMEINT OF STRUCTURE %G00
                                       TO <FIELD>.
      IF SY-SUBRC = 0.
        WRITE <FIELD> TO VALUE(%LDESC-FOLEN).
      ENDIF.
    ENDIF.
  ENDIF.

ENDFORM.

FORM %SAVE_PAGE.

  IF %BATCH <> SPACE AND %DIACT = 'S'.
    PERFORM SAVE_PAGE(RSAQEXCE) TABLES %ST_LISTE.
  ENDIF.

ENDFORM.

FORM %REPLACE_VAR USING TEXT.

FIELD-SYMBOLS <VAR>.

  ASSIGN TEXT+1(*) TO <VAR>.

ENDFORM.

FORM %SAVE_LIST.

DATA: %SFLAG,

*$smart (W) 2010-08-02 - #166 Datendefinition bezieht sich auf einen
*$smart (W) 2010-08-02 - #166 obsoleten Datentyp. (A)

      QREPORT TYPE REPID.                        "smart: 2010-08-02 #166

  IF %DIACT = 'S'. %SFLAG = 'X'. ENDIF.
  QREPORT = SY-REPID.
  PERFORM SAVE_LIST(RSAQEXCE) TABLES %ST_LISTE
                              USING QREPORT %SFLAG %LISTID.
  IF %QL_ID <> SPACE.
    %DLFLAG = 'X'.
    %LISTSIZE = 0253.
    PERFORM COMP_SELECTION_SCREEN(RSAQEXCE).
    EXPORT %ST_LISTE %PTAB %LDESC %GDESC %DLFLAG %LISTSIZE
           %SELECTIONS
           %G00
           TO DATABASE AQLDB(AQ) ID %QL_ID.
  ENDIF.

ENDFORM.

FORM %REFRESH.

  CASE %TAB.
  WHEN 'G00'.
    IMPORT %G00 FROM DATABASE AQLDB(AQ) ID %QL_ID.
  ENDCASE.

ENDFORM.


*$smart (W) 2010-08-02 - #105 Automatische Auflösung untypisierter FORM
*$smart (W) 2010-08-02 - #105 Parameter, soweit dies möglich ist. Dies
*$smart (W) 2010-08-02 - #105 wird nur angewendet wenn alle Aufrufe
*$smart (W) 2010-08-02 - #105 (PERFORM Anweisung) die selbe Typisierung
*$smart (W) 2010-08-02 - #105 verwenden. (A)

FORM %DOWNLOAD USING CODE TYPE CLIKE.            "smart: 2010-08-02 #105


*$smart (W) 2010-08-02 - #166 Datendefinition bezieht sich auf einen
*$smart (W) 2010-08-02 - #166 obsoleten Datentyp. (A)

DATA: QREPORT TYPE REPID.                        "smart: 2010-08-02 #166

  PERFORM INIT_DOWNLOAD(RSAQEXCE).
  QREPORT = SY-REPID.
  CASE %TAB.
  WHEN 'G00'.
    PERFORM DOWNLOAD(RSAQEXCE)
            TABLES %G00 USING CODE QREPORT TEXT-GRL.
  WHEN OTHERS.
    MESSAGE S860(AQ).
  ENDCASE.

ENDFORM.

FORM %SET_DATA CHANGING L_LINES TYPE I.

  IMPORT LDATA TO %G00 FROM MEMORY ID 'AQLISTDATA'.
  DESCRIBE TABLE %G00 LINES L_LINES.
  FREE MEMORY ID 'AQLISTDATA'.

ENDFORM.

FORM %GET_DATA TABLES DATATAB STRUCTURE %G00
               USING  FIRST TYPE I
                      LAST  TYPE I.

  APPEND LINES OF %G00 FROM FIRST TO LAST TO DATATAB.

ENDFORM.

FORM %GET_REF_TO_TABLE USING LID         LIKE RSAQLDESC-LID
                             REF_TO_ITAB TYPE REF TO DATA
                             SUBRC       LIKE SY-SUBRC.

  SUBRC = 0.
  CASE LID.
  WHEN 'G00'.
    CREATE DATA REF_TO_ITAB LIKE %G00[].
  WHEN OTHERS.
    SUBRC = 4.
    MESSAGE S860(AQ).
  ENDCASE.

ENDFORM.

FORM %VIEW.

DATA: RET TYPE I.

  PERFORM CHECK_WINGUI(RSAQSYST) USING RET.
  IF RET <> 0.
    MESSAGE S841(AQ).
    PERFORM %DOWNLOAD USING 'ALV'.
    EXIT.
  ENDIF.

DATA: ANZ TYPE I,

*$smart (W) 2010-08-02 - #166 Datendefinition bezieht sich auf einen
*$smart (W) 2010-08-02 - #166 obsoleten Datentyp. (A)

      PROG TYPE REPID.                           "smart: 2010-08-02 #166

  PROG = SY-REPID.
  PERFORM INIT_DOWNLOAD(RSAQEXCE).
  CASE %TAB.
  WHEN 'G00'.
    PERFORM GENERATE_VIEW_DYNPRO(RSAQEXCE)
            USING PROG TEXT-GRL.
    DESCRIBE TABLE %G00 LINES ANZ.
    TVIEW100-LINES = ANZ.
    PERFORM INIT_VIEW(RSAQEXCE) TABLES %G00 USING TVIEW100.
    CALL SCREEN 100.
    PERFORM RESET_VIEW_DYNPRO(RSAQEXCE).
  WHEN OTHERS.
    MESSAGE S860(AQ).
  ENDCASE.

ENDFORM.


FORM %OUTPUT_GL.

IF %MAX_PRLIST <> 0.
  READ TABLE %PRLIST WITH KEY TAB = 'GGG'.
  IF SY-SUBRC <> 0.
    EXIT.
  ENDIF.
ENDIF.
SET MARGIN 00.
PERFORM COMPLETE_PAGE(RSAQEXCE).
%NOCHANGE = SPACE.
NEW-PAGE.
REFRESH %WA010.
REFRESH %W0100.
REFRESH %W0100.
%GLLINE   = 0.
%TAB      = 'G00'.
%LINE     = 0.
%CONT     = '0'.
%FINT     = SPACE.
%FCOL     = '0'.
%HEAD     = 'GGG'.
%CLINE    = 0.
%OUTFLAG  = SPACE.
%OUTCOMP  = SPACE.
%OUTTOTAL = SPACE.
%RFLAG    = 'AA'.
IF %DIACT <> SPACE AND %DIACT NA 'SWE'. WRITE SPACE. ENDIF.
FORMAT RESET.
LOOP.
  %DATA_SELECTED = 'X'.
  AT %FG01.
    %ZNR = '01'.
    %ZGR = '01'.
    %CLINE = %CLINE + 1.
    %G00-EKPO_MATNR = EKPO-MATNR.                "smart: 2010-08-02 #102
    %G00-EKPO_EBELN = EKPO-EBELN.                "smart: 2010-08-02 #102
    %G00-EKPO_EBELP = EKPO-EBELP.                "smart: 2010-08-02 #102
    %G00-EKET_MENGE = EKET-MENGE.                "smart: 2010-08-02 #102
    %G00-EKPO_MEINS_0104 = EKPO-MEINS.           "smart: 2010-08-02 #102
    %G00-EKET_WEMNG = EKET-WEMNG.                "smart: 2010-08-02 #102
    %G00-EKPO_MEINS_0105 = EKPO-MEINS.           "smart: 2010-08-02 #102
    IF %FIRST <> SPACE. APPEND %G00. ENDIF.
    %GLLINE = %GLLINE + 1.
    %LZNR = %ZNR.
    IF %DIACT <> SPACE AND %DIACT NA 'SWE'. CONTINUE. ENDIF.
    PERFORM CHECK(RSAQEXCE) USING ' '.
    IF %RFLAG = 'E'. EXIT. ENDIF.
    IF %RFLAG(1) = 'A'.
    FORMAT RESET.
    %FINT = 'F'. %FCOL = '0'.
    FORMAT COLOR 2. %FCOL = '2'.
    PERFORM %NEWLINE.
    WRITE 002(018) EKPO-MATNR.
    %LINE = %GLLINE.
    PERFORM %HIDE.
    %LINE = 0.
    PERFORM %HIDE_COLOR.
    WRITE 021(010) EKPO-EBELN.
    WRITE 032(005) EKPO-EBELP.
    WRITE 038(017) EKET-MENGE
      UNIT EKPO-MEINS.
    WRITE 056(003) EKPO-MEINS.
    WRITE 060(017) EKET-WEMNG
      UNIT EKPO-MEINS.
    WRITE 078(003) EKPO-MEINS.
    ENDIF.
  ENDAT.
  AT %FGWREKET01.
    CLEAR %W0100.
    %W0100-EKPO_MEINS = EKPO-MEINS.              "smart: 2010-08-02 #102
    %W0100-EKET_MENGE = EKET-MENGE.              "smart: 2010-08-02 #102
    %W0100-EKET_WEMNG = EKET-WEMNG.              "smart: 2010-08-02 #102
    COLLECT %W0100.
  ENDAT.
  AT LAST.
    %ZNR = 0.
    %RFLAG = 'AA'.
    %OUTTOTAL = 'X'.
    PERFORM RESERVE(RSAQEXCE) USING 2.
    PERFORM %ULINE.
    FORMAT RESET.
    FORMAT INTENSIFIED ON COLOR 3.
    %FINT = 'N'. %FCOL = '3'.
    %NOCHANGE = 'X'.
    PERFORM %NEWLINE.
    %NOCHANGE = SPACE.
    WRITE (11) TEXT-F02.
    PERFORM %HIDE.
    PERFORM %HIDE_COLOR.
    SORT %W0100 BY EKPO_MEINS.                   "smart: 2010-08-02 #102
      WRITE 082 '*'.
      REFRESH %WA010.
      DO.
        %SUBRC = 4.
        CLEAR %WA010.
        READ TABLE %W0100 INDEX SY-INDEX.
        IF SY-SUBRC = 0.
          %SUBRC = 0.
          %WA010-EKET-EKPO_MEINS = %W0100-EKPO_MEINS.
                                                 "smart: 2010-08-02 #102

          %WA010-EKET_MENGE = %W0100-EKET_MENGE. "smart: 2010-08-02 #102
          %WA010-EKET_WEMNG = %W0100-EKET_WEMNG. "smart: 2010-08-02 #102
        ENDIF.
        IF %SUBRC = 4.
          EXIT.
        ENDIF.
        APPEND %WA010.
      ENDDO.
      LOOP AT %WA010.
        IF SY-TABIX <> 1.
          PERFORM %NEWLINE.
        ENDIF.
        IF %WA010-EKET-EKPO_MEINS = SPACE.       "smart: 2010-08-02 #102
          WRITE 038(017) %WA010-EKET_MENGE       "smart: 2010-08-02 #102
                UNIT %WA010-EKET-EKPO_MEINS NO-ZERO.
                                                 "smart: 2010-08-02 #102

          IF NOT %WA010-EKET_MENGE IS INITIAL.   "smart: 2010-08-02 #102
            %KEYEMPTY = 'X'.
          ENDIF.
        ELSE.
          WRITE 038(017) %WA010-EKET_MENGE       "smart: 2010-08-02 #102
                UNIT %WA010-EKET-EKPO_MEINS.     "smart: 2010-08-02 #102
        ENDIF.
        WRITE 056(003) %WA010-EKET-EKPO_MEINS.   "smart: 2010-08-02 #102
        IF %WA010-EKET-EKPO_MEINS = SPACE.       "smart: 2010-08-02 #102
          WRITE 060(017) %WA010-EKET_WEMNG       "smart: 2010-08-02 #102
                UNIT %WA010-EKET-EKPO_MEINS NO-ZERO.
                                                 "smart: 2010-08-02 #102

          IF NOT %WA010-EKET_WEMNG IS INITIAL.   "smart: 2010-08-02 #102
            %KEYEMPTY = 'X'.
          ENDIF.
        ELSE.
          WRITE 060(017) %WA010-EKET_WEMNG       "smart: 2010-08-02 #102
                UNIT %WA010-EKET-EKPO_MEINS.     "smart: 2010-08-02 #102
        ENDIF.
        WRITE 078(003) %WA010-EKET-EKPO_MEINS.   "smart: 2010-08-02 #102
        PERFORM %HIDE.
        PERFORM %HIDE_COLOR.
      ENDLOOP.
  ENDAT.
ENDLOOP.
%RFLAG = 'AA'.
PERFORM %ULINE.
CLEAR: %CLINE, %ZGR.

ENDFORM.



MODULE %INIT_VIEW OUTPUT.

  CASE %TAB.
  WHEN 'G00'.
    PERFORM INIT_PBO(RSAQEXCE) TABLES %G00 USING TVIEW100 'X'.
  WHEN OTHERS.
    MESSAGE S860(AQ).
  ENDCASE.

ENDMODULE.

MODULE %PBO_VIEW OUTPUT.

  CASE %TAB.
  WHEN 'G00'.
    PERFORM LOOP_PBO(RSAQEXCE) TABLES %G00 USING %%G00 TVIEW100.
  ENDCASE.

ENDMODULE.

MODULE %PAI_VIEW INPUT.

  CASE %TAB.
  WHEN 'G00'.
    PERFORM LOOP_PAI(RSAQEXCE) TABLES %G00 USING %%G00 TVIEW100.
  ENDCASE.

ENDMODULE.

MODULE %OKCODE_VIEW INPUT.

  CASE %TAB.
  WHEN 'G00'.
    PERFORM OKCODE(RSAQEXCE) TABLES %G00 USING TVIEW100.
  ENDCASE.

ENDMODULE.
